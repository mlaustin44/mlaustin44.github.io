(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{397:function(s,t,e){"use strict";e.r(t);var a=e(10),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[s._v("#")]),s._v(" Introduction")]),s._v(" "),e("p",[s._v("When I set up my Proxmox home server I used ZFS as the file system/RAID.  ZFS provides both a filesystem and integrity checking/redundancy features.  Since I had 4x2TB drives available to be in a 1U server, I decided to use 'RAID-Z', which is analogous to RAID-5 - you get the storage of n-1 of your disks, because one drive is used to store a parity value across the other disks.  This way, if any data disk fails you can recalculate its data using the parity values, and if the parity disk fails you can recalculate the parity.")]),s._v(" "),e("p",[s._v("When I purchased the server I also got a replacement 2TB SAS drive compatible with my server so I'd have it on hand in case a disk failed.")]),s._v(" "),e("p",[s._v("Years ago I ran a hardware RAID-5 configuration on a desktop computer using an old Dell RAID controller.  At some point a disk failed, and when I tried to replace it I ended up ruining the entire cluster.  I realized that if I wanted to use this server to actually store important data, I would need to ensure that I had a tested process I understood to replace a failed drive.  I created a fake failure scenario by shutting down the server, swapping one of the drives for my spare, and then booting up.")]),s._v(" "),e("h2",{attrs:{id:"replacing-disks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replacing-disks"}},[s._v("#")]),s._v(" Replacing Disks")]),s._v(" "),e("h3",{attrs:{id:"background"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[s._v("#")]),s._v(" Background")]),s._v(" "),e("p",[s._v("My zpool is called 'rpool' and consists of 4 2TB drives in a RAID-Z configuration.")]),s._v(" "),e("h3",{attrs:{id:"assessing-the-failure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#assessing-the-failure"}},[s._v("#")]),s._v(" Assessing the Failure")]),s._v(" "),e("p",[s._v("First, we can check the status of our zpool with 'zpool status':")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:~"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zpool status")]),s._v("\n  pool: rpool\n state: DEGRADED\nstatus: One or "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" devices could not be used because the label is missing or\n\tinvalid.  Sufficient replicas exist "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the pool to "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("continue")]),s._v("\n\tfunctioning "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a degraded state.\naction: Replace the device using "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zpool replace'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n   see: http://zfsonlinux.org/msg/ZFS-8000-4J\n  scan: resilvered "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(".0G "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" days 00:28:56 with "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" errors on Mon Aug "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":54:47 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("\nconfig:\n\n\tNAME                              STATE     READ WRITE CKSUM\n\trpool                             DEGRADED     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t  raidz1-0                        DEGRADED     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t    scsi-35000c500573c0633-part3  ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("12204241085373093059")]),s._v("          UNAVAIL      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  was /dev/disk/by-id/scsi-35000c50042509acf-part3\n\t    scsi-35000c50056f2a1c7-part3  ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t    scsi-35000c50056a77683-part3  ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\nerrors: No known data errors\n")])])]),e("p",[s._v("When I arrived here I had to pause for a moment to marvel at the fact that even though one of its drives was missing, ZFS allowed my server to boot up and function fully.  As the status result notes, performance will be 'degraded' - beacuse it might be needing to calculate 1/3 of the data from parity values - but everthing still generally works, which is incredible to me.")]),s._v(" "),e("p",[s._v("A few key takehomes from this:")]),s._v(" "),e("ul",[e("li",[s._v("The good disks are:\n"),e("ul",[e("li",[s._v("scsi-35000c500573c0633")]),s._v(" "),e("li",[s._v("scsi-35000c50056f2a1c7")]),s._v(" "),e("li",[s._v("scsi-35000c50056a77683")])])]),s._v(" "),e("li",[s._v("The failed disk is:\n"),e("ul",[e("li",[s._v("scsi-35000c50042509acf")])])])]),s._v(" "),e("p",[s._v("Now we can list the actual devices available on the system (since I prematurely 'replaced' the physical drive):")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:~"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -1 /dev/disk/by-id/")]),s._v("\nscsi-35000c50056a77683\nscsi-35000c50056a77683-part1\nscsi-35000c50056a77683-part2\nscsi-35000c50056a77683-part3\nscsi-35000c50056f2a1c7\nscsi-35000c50056f2a1c7-part1\nscsi-35000c50056f2a1c7-part2\nscsi-35000c50056f2a1c7-part3\nscsi-35000c50056f79d47\nscsi-35000c500573c0633\nscsi-35000c500573c0633-part1\nscsi-35000c500573c0633-part2\nscsi-35000c500573c0633-part3\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),e("p",[s._v("The replacement disk is the only one that isn't part of the pool - scsi-35000c50056f79d47.")]),s._v(" "),e("h4",{attrs:{id:"aside-mapping-dev-sdx-to-ids"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aside-mapping-dev-sdx-to-ids"}},[s._v("#")]),s._v(" Aside: Mapping /dev/sdX to IDs")]),s._v(" "),e("p",[s._v("This stumped me for a bit so I wanted to include it.  Lots of Linux utilities are looking for you address drives as /dev/sdX rather than by ID.  The only way I've found to do this is to go through all your /dev/sdX's and use smartctl to print out the disk details, which include the UID:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:~"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# smartctl -i /dev/sda")]),s._v("\nsmartctl "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("-12-30 r5022 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x86_64-linux-5.4.34-1-pve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("local build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nCopyright "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2002")]),s._v("-19, Bruce Allen, Christian Franke, www.smartmontools.org\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" START OF INFORMATION SECTION "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\nVendor:               SEAGATE\nProduct:              ST2000NM0001\nRevision:             0002\nCompliance:           SPC-4\nUser Capacity:        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2,000")]),s._v(",398,934,016 bytes "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.00")]),s._v(" TB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nLogical block size:   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" bytes\nRotation Rate:        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7200")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v("\nForm Factor:          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.5")]),s._v(" inches\nLogical Unit id:      0x5000c500573c0633\nSerial number:        Z1P65M4Y0000940662YF\nDevice type:          disk\nTransport protocol:   SAS "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPL-3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLocal Time is:        Tue Aug "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" 09:41:01 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v(" CDT\nSMART support is:     Available - device has SMART capability.\nSMART support is:     Enabled\nTemperature Warning:  Enabled\n")])])]),e("p",[s._v("The 'Logical Unit id' will correspond to the drive UID.")]),s._v(" "),e("h4",{attrs:{id:"aside-2-physically-locating-disks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aside-2-physically-locating-disks"}},[s._v("#")]),s._v(" Aside 2: Physically locating disks")]),s._v(" "),e("p",[s._v("On most servers, there is a physical LED for drive failure which you can control through the ledctl software utility to identify drives.  On Proxmox/Debian this is in the 'ledmon' package (apt-get install ledmon).  You can then turn the LED indicator on and off with:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ledctl locate=/dev/disk/by-id/scsi-35000c500573c0633")]),s._v("\nroot@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ledctl locate_off=/dev/disk/by-id/scsi-35000c500573c0633")]),s._v("\n")])])]),e("h3",{attrs:{id:"replacement-disk-boot-partition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replacement-disk-boot-partition"}},[s._v("#")]),s._v(" Replacement disk boot partition")]),s._v(" "),e("p",[s._v("If the ZFS pool is also where Proxmox boots you will need to perform a few extra steps which I missed the first time I tested this process.  Each drive in the ZFS pool needs to be bootable and have a boot partitions (which we copy from one of the other drives - all the boot partitions are identical).")]),s._v(" "),e("ol",[e("li",[s._v("Replicate an existing drive's boot partition\nUsing 'sgdisk "),e("existing",{attrs:{drive:""}},[s._v(" -R "),e("new",{attrs:{drive:""}},[s._v("' we copy the boot partition and partition table to the new disk:")])],1)],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sgdisk /dev/sda -R /dev/sdb")]),s._v("\nThe operation has completed successfully.\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("Randomize the GUIDs for the new drive\nSince we did an exact duplicate of an existing drive's boot data, we now need to randomize the disk and parition GUIDs to avoid a collision using 'sgdisk -G "),e("new",{attrs:{drive:""}},[s._v("'")])],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sgdisk -G /dev/sdb")]),s._v("\nThe operation has completed successfully.\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("Add grub to the new disk\nInstall grub on the new drive using 'grub-install "),e("new",{attrs:{drive:""}},[s._v("'")])],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grub-install /dev/sdb")]),s._v("\nInstalling "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i386-pc platform.\nInstallation finished. No error reported.\n")])])]),e("h3",{attrs:{id:"add-the-new-disk-to-the-zfs-pool-and-resilver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-the-new-disk-to-the-zfs-pool-and-resilver"}},[s._v("#")]),s._v(" Add the new disk to the ZFS pool and resilver")]),s._v(" "),e("p",[s._v("The actual ZFS replacement is shockingly easy - it's a single command to tell ZFS, after which copying and checking the data (resilvering) is automatic: 'zpool replace -f "),e("pool",[e("old",{attrs:{device:""}},[e("new",{attrs:{device:""}},[s._v("'.  Note that ZFS always uses drive UIDs instead of /dev/sdX's.")])],1)],1)],1),s._v(" "),e("p",[s._v("There is one big 'gotcha' for bootable disks - you don't want to add the entire disk to the pool, as that actually overwrites your shiny new partition table.  Rather, you need to use the ZFS partition for the replacement (the partition table was created by copying from a known good disk).  The current partition table can be printed out using 'fdisk -l "),e("drive",[s._v("':")])],1),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fdisk -l /dev/sdb")]),s._v("\nDisk /dev/sdb: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),s._v(" TiB, "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000398934016")]),s._v(" bytes, "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3907029168")]),s._v(" sectors\nDisk model: ST2000NM0001    \nUnits: sectors of "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" * "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" bytes\nSector size "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("logical/physical"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" bytes / "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" bytes\nI/O size "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minimum/optimal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" bytes / "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v(" bytes\nDisklabel type: gpt\nDisk identifier: 774AF982-0268-4814-A93E-A969E91F22FC\n\nDevice       Start        End    Sectors  Size Type\n/dev/sdb1       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2047")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2014")]),s._v(" 1007K BIOS boot\n/dev/sdb2     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1050623")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v("  512M EFI System\n/dev/sdb3  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1050624")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3907029134")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3905978511")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".8T Solaris /usr "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" Apple ZFS\n")])])]),e("p",[s._v("The 3rd dev partition (sdb3) corresponds to the UID-part3 - so in this case, the drive I actually want to replace into the pool is 'scsi-35000c50056f79d47-part3'")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zpool replace -f rpool scsi-35000c50042509acf scsi-35000c50056f79d47-part3")]),s._v("\nMake sure to "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" resilver is "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" before rebooting.\n")])])]),e("p",[s._v("You can watch the status of the resilver by calling 'zpool status' - it shows up in the top information section:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("root@proxmox:/dev"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zpool status")]),s._v("\n  pool: rpool\n state: DEGRADED\nstatus: One or "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" devices is currently being resilvered.  The pool will\n\t"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("continue")]),s._v(" to function, possibly "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a degraded state.\naction: Wait "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the resilver to complete.\n  scan: resilver "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" progress since Tue Aug "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" 09:54:47 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("58")]),s._v(".5G scanned at "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".83G/s, "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(".8G issued at 729M/s, "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("58")]),s._v(".6G total\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("85")]),s._v(".8M resilvered, "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("38.92")]),s._v("% done, "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" days 00:00:50 to go\nconfig:\n\n\tNAME                               STATE     READ WRITE CKSUM\n\trpool                              DEGRADED     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t  raidz1-0                         DEGRADED     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t    scsi-35000c500573c0633-part3   ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t    replacing-1                    DEGRADED     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("12204241085373093059")]),s._v("         UNAVAIL      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  was /dev/disk/by-id/scsi-35000c50042509acf-part3\n\t      scsi-35000c50056f79d47-part3 ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("resilvering"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t    scsi-35000c50056f2a1c7-part3   ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\t    scsi-35000c50056a77683-part3   ONLINE       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\nerrors: No known data errors\n")])])]),e("h3",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[s._v("#")]),s._v(" References")]),s._v(" "),e("ol",[e("li",[s._v("Oracle ZFS Docs - Replacing drives: (https://docs.oracle.com/cd/E19253-01/819-5461/gazgd/index.html)")]),s._v(" "),e("li",[s._v("Proxmox Docs - Replacing bootable ZFS drives: (https://pve.proxmox.com/wiki/ZFS_on_Linux#sysadmin_zfs_change_failed_dev)")]),s._v(" "),e("li",[s._v("sgdisk man page: (https://www.rodsbooks.com/gdisk/sgdisk.html)")]),s._v(" "),e("li",[s._v("ledctl man page: (https://linux.die.net/man/8/ledctl)")])])])}),[],!1,null,null,null);t.default=n.exports}}]);