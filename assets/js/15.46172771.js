(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{394:function(t,a,s){"use strict";s.r(a);var e=s(10),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("Part 2 of the series on setting up a virtualized Kubernetes cluster on Debian VMs in Proxmox.  This covers installing the prerequisite software and configuring the VMs to act as Kubernetes notes.  I'll explain my Ansible scripts as I go through the process just like part 1.")]),t._v(" "),s("p",[t._v("All my Ansible playbooks and files are commited to "),s("a",{attrs:{href:"https://github.com/mlaustin44/server_setup/tree/master/k8s-debian",target:"_blank",rel:"noopener noreferrer"}},[t._v("my Github"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"basic-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-config"}},[t._v("#")]),t._v(" Basic config")]),t._v(" "),s("p",[t._v("These steps will be applied to all of the Kubernetes VMs (masters and nodes).  No fact gathering.  'become' is active for the entire playbook - this allows all of the tasks to run as the superuser (like 'sudo').")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s_master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("k8s_nodes\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gather_facts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("become")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"basic-package-installation-and-upgrades"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-package-installation-and-upgrades"}},[t._v("#")]),t._v(" Basic package installation and upgrades")]),t._v(" "),s("p",[t._v("When Debian first boots it automatically updates apt packages, which can cause an Ansible playbook to error out as apt is locked when it tries to start running the playbook steps.  There are ways to script waiting for this, but I got stuck on it and eventually realized that for the number of times I'm planning to build these VMs a dumb 30-second delay works fine:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Wait for automatic APT updates to finish\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("wait_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n")])])]),s("p",[t._v("Easy and lazy.")]),t._v(" "),s("p",[t._v("Next, update all of the apt packages.  For any package management I use the "),s("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/apt_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible apt module"),s("OutboundLink")],1),t._v(" instead of shell scripts.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Upgrade apt packages\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" latest\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("delay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),s("p",[t._v("The apt module is declarative, so you tell Ansible what you "),s("em",[t._v("want")]),t._v(" the state of a given package to be and it figures out how to get you there.  In this case the wildcard and 'latest' means \"all existing packages should be the latest version\".  I added in retries and a retry delay because this step would randomly fail about 20% of the time and having the retry solved it.")]),t._v(" "),s("p",[t._v("Next, install the basic packages required for a Kubernetes installation.  'nfs-common' is added here because I am going to have Kubernetes deployments which mount NFS storage.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install packages required for k8s\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apt-transport-https'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ca-certificates'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'curl'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'haveged'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gnupg2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gnupg-agent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'software-properties-common'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qemu-guest-agent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arptables'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ebtables'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nfs-common'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n")])])]),s("p",[t._v("Ansible wants to pass a list of packages to apt rather than use a looping construct (if you try to do an Ansible task using 'with_items' it will generate a warning).  As above, this is declaring \"packages in this list need to be present on the system\" and letting Ansible sort out the details.")]),t._v(" "),s("h2",{attrs:{id:"configure-vms-to-use-legacy-networking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-vms-to-use-legacy-networking"}},[t._v("#")]),t._v(" Configure VMs to use legacy networking")]),t._v(" "),s("p",[t._v("Debian 10 (Buster) replaces "),s("a",{attrs:{href:"https://wiki.debian.org/iptables",target:"_blank",rel:"noopener noreferrer"}},[t._v("iptables with nftables"),s("OutboundLink")],1),t._v(".  This creates a "),s("a",{attrs:{href:"https://github.com/kubernetes/kubernetes/issues/71305",target:"_blank",rel:"noopener noreferrer"}},[t._v("known issue with kubeproxy"),s("OutboundLink")],1),t._v(".  In order for Kubernetes networking to function correctly, we need to configure debian to use the 'legacy' iptables, arptables, and ebtables.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Configure nodes to use legacy ip tables for routing compatibility with k8s\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alternatives")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{{ item }}"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /usr/sbin/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("legacy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with_items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iptables"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip6tables"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arptables"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ebtables"')]),t._v("\n")])])]),s("p",[t._v("The "),s("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/alternatives_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible alternatives module"),s("OutboundLink")],1),t._v(" is a wrapper for the standard Linux 'update-alternatives' tool that lets you change symbolic links to applications.  Before this task calls to iptable would actually call nftable, afterwards calls to iptable will call iptable-legacy, which is what Debian calls the original iptable tool.")]),t._v(" "),s("h2",{attrs:{id:"install-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-docker"}},[t._v("#")]),t._v(" Install Docker")]),t._v(" "),s("p",[t._v("I decided to use Docker as my container runtime since it's probably the most standard Kubernetes setup.  Kuberntes supports "),s("a",{attrs:{href:"https://kubernetes.io/docs/setup/production-environment/container-runtimes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("a few options"),s("OutboundLink")],1),t._v(", but I wanted to do a fairly basic Kubernetes cluster to start.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Add docker gpg key to apt\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt_key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//download.docker.com/linux/debian/gpg\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Add the docker repository to apt\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt_repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deb https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//download.docker.com/linux/debian buster stable\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docker'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install docker\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docker-ce'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'containerd.io'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("These are all pretty standard operations (add a gpg key to apt, add a repository to apt, install a package), but it's a good demonstration of using Ansible modules for common tasks.")]),t._v(" "),s("h2",{attrs:{id:"install-kubernetes-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-kubernetes-tools"}},[t._v("#")]),t._v(" Install Kubernetes Tools")]),t._v(" "),s("p",[t._v("Same steps as above - I wanted to install the Kubernetes tools (kubelet, kubeadm, kubectl) using apt instead of binaries.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Add kubernetes gpg key to apt\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt_key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//packages.cloud.google.com/apt/doc/apt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("key.gpg\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Add kubernetes apt repository\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt_repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deb http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//apt.kubernetes.io/ kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("xenial main\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubernetes'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install kubelet\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubelet\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install kubeadm\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubeadm\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install kubectl\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kubectl\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("update_cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"networking-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#networking-config"}},[t._v("#")]),t._v(" Networking Config")]),t._v(" "),s("h3",{attrs:{id:"remove-dhcp-from-ethernet-interface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remove-dhcp-from-ethernet-interface"}},[t._v("#")]),t._v(" Remove DHCP from ethernet interface")]),t._v(" "),s("p",[t._v("Even though I configured the VM to have a static IP, it was still getting a dynamically assigned IP as well.  Quick to remove using "),s("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/lineinfile_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("lineinfile, which is Ansible's answer to sed"),s("OutboundLink")],1),t._v(" - in this case, just removing a line from a config file:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Removing the DHCP lines for eth0 from the interfaces file.\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lineinfile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absent\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/network/interfaces\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("line")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" iface eth0 inet dhcp\n")])])]),s("h3",{attrs:{id:"configure-bridged-routing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-bridged-routing"}},[t._v("#")]),t._v(" Configure bridged routing")]),t._v(" "),s("p",[t._v("Kubernetes requires bridged networking to allow the node to route traffic to individual pods.  This is a simple enable with the "),s("a",{attrs:{href:"https://docs.ansible.com/ansible/latest/modules/sysctl_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible sysctl module"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Configure bridged network packet routing\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sysctl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" net.bridge.bridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("iptables\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sysctl_set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://wiki.libvirt.org/page/Net.bridge.bridge-nf-call_and_sysctl.conf",target:"_blank",rel:"noopener noreferrer"}},[t._v("This particular setting determines whether or not bridged traffic is subject to iptables rules"),s("OutboundLink")],1),t._v(".  If a machine is on a bridged network, by default only traffic for that machine is sent to iptables for routing - traffic being sent to VMs/containers running on the machine are passed to those machines directly.  Normally this makes sense as the iptables rules are configured for just the host, but since Kubernetes uses iptables to configure routing rules for the containers and pods we need to configure the networking so that ALL traffic - whether for hosts or guests - is sent to iptables for processing.")]),t._v(" "),s("h2",{attrs:{id:"disable-swap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disable-swap"}},[t._v("#")]),t._v(" Disable swap")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/kubernetes/kubernetes/blob/5d4553a90d110391d20324fe7f1890e48c8de659/CHANGELOG/CHANGELOG-1.8.md#changelog-since-v183",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kubernetes has required that memory swapping be disabled since v1.8."),s("OutboundLink")],1),t._v("  To disable swap on Debian we first unmount the swap partition and then use the "),s("a",{attrs:{href:"https://linux.die.net/man/8/swapoff",target:"_blank",rel:"noopener noreferrer"}},[t._v("swapoff utility"),s("OutboundLink")],1),t._v(" to disable swap entirely.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Unmount swap partition\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" swap\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fstype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" swap\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absent\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Turn off swap\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" swapoff "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n")])])]),s("h2",{attrs:{id:"reboot-vm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reboot-vm"}},[t._v("#")]),t._v(" Reboot VM")]),t._v(" "),s("p",[t._v("Finally, we reboot the VM to allow all of the various changes to take effect:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Reboot system\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("reboot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),s("h2",{attrs:{id:"next-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#next-time"}},[t._v("#")]),t._v(" Next Time")]),t._v(" "),s("p",[t._v("We bootstrap the cluster!")])])}),[],!1,null,null,null);a.default=n.exports}}]);